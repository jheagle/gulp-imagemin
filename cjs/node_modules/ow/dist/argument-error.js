"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArgumentError = void 0;
require("core-js/modules/esnext.map.delete-all.js");
require("core-js/modules/esnext.map.every.js");
require("core-js/modules/esnext.map.filter.js");
require("core-js/modules/esnext.map.find.js");
require("core-js/modules/esnext.map.find-key.js");
require("core-js/modules/esnext.map.includes.js");
require("core-js/modules/esnext.map.key-of.js");
require("core-js/modules/esnext.map.map-keys.js");
require("core-js/modules/esnext.map.map-values.js");
require("core-js/modules/esnext.map.merge.js");
require("core-js/modules/esnext.map.reduce.js");
require("core-js/modules/esnext.map.some.js");
require("core-js/modules/esnext.map.update.js");
var _generateStack = require("./utils/generate-stack.js");
const wrapStackTrace = (error, stack) => `${error.name}: ${error.message}\n${stack}`;
/**
@hidden
*/
class ArgumentError extends Error {
  validationErrors;
  constructor(message, context, errors = new Map()) {
    super(message);
    this.name = 'ArgumentError';
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, context);
    } else {
      this.stack = wrapStackTrace(this, (0, _generateStack.generateStackTrace)());
    }
    this.validationErrors = errors;
  }
}
exports.ArgumentError = ArgumentError;