"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.npmRunPathEnv = exports.npmRunPath = void 0;
var _nodeProcess = _interopRequireDefault(require("node:process"));
var _nodePath = _interopRequireDefault(require("node:path"));
var _nodeUrl = require("node:url");
var _index = _interopRequireDefault(require("./node_modules/path-key/index.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const npmRunPath = ({
  cwd = _nodeProcess.default.cwd(),
  path: pathOption = _nodeProcess.default.env[(0, _index.default)()],
  preferLocal = true,
  execPath = _nodeProcess.default.execPath,
  addExecPath = true
} = {}) => {
  const cwdString = cwd instanceof URL ? (0, _nodeUrl.fileURLToPath)(cwd) : cwd;
  const cwdPath = _nodePath.default.resolve(cwdString);
  const result = [];
  if (preferLocal) {
    applyPreferLocal(result, cwdPath);
  }
  if (addExecPath) {
    applyExecPath(result, execPath, cwdPath);
  }
  return [...result, pathOption].join(_nodePath.default.delimiter);
};
exports.npmRunPath = npmRunPath;
const applyPreferLocal = (result, cwdPath) => {
  let previous;
  while (previous !== cwdPath) {
    result.push(_nodePath.default.join(cwdPath, 'node_modules/.bin'));
    previous = cwdPath;
    cwdPath = _nodePath.default.resolve(cwdPath, '..');
  }
};

// Ensure the running `node` binary is used
const applyExecPath = (result, execPath, cwdPath) => {
  const execPathString = execPath instanceof URL ? (0, _nodeUrl.fileURLToPath)(execPath) : execPath;
  result.push(_nodePath.default.resolve(cwdPath, execPathString, '..'));
};
const npmRunPathEnv = ({
  env = _nodeProcess.default.env,
  ...options
} = {}) => {
  env = {
    ...env
  };
  const pathName = (0, _index.default)({
    env
  });
  options.path = env[pathName];
  env[pathName] = npmRunPath(options);
  return env;
};
exports.npmRunPathEnv = npmRunPathEnv;