"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reservedIdentifiers;
require("core-js/modules/esnext.set.add-all.js");
require("core-js/modules/esnext.set.delete-all.js");
require("core-js/modules/esnext.set.difference.js");
require("core-js/modules/esnext.set.every.js");
require("core-js/modules/esnext.set.filter.js");
require("core-js/modules/esnext.set.find.js");
require("core-js/modules/esnext.set.intersection.js");
require("core-js/modules/esnext.set.is-disjoint-from.js");
require("core-js/modules/esnext.set.is-subset-of.js");
require("core-js/modules/esnext.set.is-superset-of.js");
require("core-js/modules/esnext.set.join.js");
require("core-js/modules/esnext.set.map.js");
require("core-js/modules/esnext.set.reduce.js");
require("core-js/modules/esnext.set.some.js");
require("core-js/modules/esnext.set.symmetric-difference.js");
require("core-js/modules/esnext.set.union.js");
// https://262.ecma-international.org/14.0/#sec-keywords-and-reserved-words
// 14 is ES2023
const identifiers = [
// Keywords
'await', 'break', 'case', 'catch', 'class', 'const', 'continue', 'debugger', 'default', 'delete', 'do', 'else', 'enum', 'export', 'extends', 'false', 'finally', 'for', 'function', 'if', 'import', 'in', 'instanceof', 'new', 'null', 'return', 'super', 'switch', 'this', 'throw', 'true', 'try', 'typeof', 'var', 'void', 'while', 'with', 'yield',
// Future reserved keywords
'implements', 'interface', 'package', 'private', 'protected', 'public',
// Not keywords, but still restricted
'arguments', 'eval'];

// https://262.ecma-international.org/14.0/#sec-value-properties-of-the-global-object
const globalProperties = ['globalThis', 'Infinity', 'NaN', 'undefined'];
function reservedIdentifiers({
  includeGlobalProperties = false
} = {}) {
  return new Set([...identifiers, ...(includeGlobalProperties ? globalProperties : [])]);
}