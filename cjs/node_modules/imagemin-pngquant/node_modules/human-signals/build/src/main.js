"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.signalsByNumber = exports.signalsByName = void 0;
require("core-js/modules/esnext.async-iterator.find.js");
require("core-js/modules/esnext.async-iterator.map.js");
require("core-js/modules/esnext.iterator.constructor.js");
require("core-js/modules/esnext.iterator.find.js");
require("core-js/modules/esnext.iterator.map.js");
var _nodeOs = require("node:os");
var _realtime = require("./realtime.js");
var _signals = require("./signals.js");
const getSignalsByName = () => {
  const signals = (0, _signals.getSignals)();
  return Object.fromEntries(signals.map(getSignalByName));
};
const getSignalByName = ({
  name,
  number,
  description,
  supported,
  action,
  forced,
  standard
}) => [name, {
  name,
  number,
  description,
  supported,
  action,
  forced,
  standard
}];
const signalsByName = exports.signalsByName = getSignalsByName();
const getSignalsByNumber = () => {
  const signals = (0, _signals.getSignals)();
  const length = _realtime.SIGRTMAX + 1;
  const signalsA = Array.from({
    length
  }, (value, number) => getSignalByNumber(number, signals));
  return Object.assign({}, ...signalsA);
};
const getSignalByNumber = (number, signals) => {
  const signal = findSignalByNumber(number, signals);
  if (signal === undefined) {
    return {};
  }
  const {
    name,
    description,
    supported,
    action,
    forced,
    standard
  } = signal;
  return {
    [number]: {
      name,
      number,
      description,
      supported,
      action,
      forced,
      standard
    }
  };
};
const findSignalByNumber = (number, signals) => {
  const signal = signals.find(({
    name
  }) => _nodeOs.constants.signals[name] === number);
  if (signal !== undefined) {
    return signal;
  }
  return signals.find(signalA => signalA.number === number);
};
const signalsByNumber = exports.signalsByNumber = getSignalsByNumber();